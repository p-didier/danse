seed: 12351
# seed: 12347
#
exportParams:
  exportFolder: C:\Users\pdidier\Dropbox\PC\Documents\sounds-phd\danse/out/20230626_tests/ssNodes_network/2_online # folder to export outputs
  metricsInPlots:
  - snr
  - sisnr
  - estoi
  sroEstimPerfPlot: false
  filters: false
  conditionNumberPlot: false
  mseBatchPerfPlot: false
danseParams:
  startUpdatesAfterAtLeast: 0 # [s]
  maxBatchUpdates: 20
  performGEVD: false
  # performGEVD: true
  # simType: batch
  simType: online
  # nodeUpdating: asy
  nodeUpdating: seq
  # noExternalFilterRelaxation: true
  noExternalFilterRelaxation: false
  computeLocal: true
  computeCentralised: true
  # filterInitType: selectFirstSensor_andFixedValue
  filterInitType: selectFirstSensor
  # filterInitFixedValue: 0.01
  filterInitFixedValue: 1
  #
  # ------------ SRO stuff
  # compensateSROs: true
  compensateSROs: false
  estimateSROs: Oracle   # "Oracle"/"CohDrift"/"DXCPPhaT"
  compensationStrategy: node-specific  # "node-specific"/"network-wide"
  # compensationStrategy: network-wide  # "node-specific"/"network-wide"
  # ----------------------
  #
  WOLAovlp: 0.5
  # DFTsize: 512
  DFTsize: 1024
  # DFTsize: 2048
  # DFTsize: 4096
  startComputeMetricsAt: after_beginning_2nd_utterance_200
  t_expAvg50p: 1
  t_expAvg50pExternalFilters: 2
  # t_expAvg50pExternalFilters: 0.02
  # forcedBeta: 0.98  # <-- if uncommented, bypasses `t_expAvg50p`
  # forcedBetaExternalFilters: 0.7  # <-- if uncommented, bypasses `t_expAvg50pExternalFilters`
  timeBtwExternalFiltUpdates: 0.25
  # timeBtwExternalFiltUpdates: 0.25
  covMatInitType: fully_random
  # covMatInitType: batch_estimates
  # covMatInitType: eye
  covMatEyeInitScaling: 1
  covMatSameInitForAllNodes: true
  covMatSameInitForAllFreqs: true
  printoutsAndPlotting:
    printout_profiler: false
referenceSensor: 0
snrYlimMax: null
wasnParams:
  # trueRoom: true
  trueRoom: false
  randIRsParams:
    distribution: uniform
    duration: 0.1  # [s] random IR duration
    decay: exponential
    decayTimeConstant: 0.04
  # Diffuse noise params
  # diffuseNoise: true
  diffuseNoise: false
  diffuseNoisePowerFactor: 0
  # diffuseNoisePowerFactor: -9999
  # typeDiffuseNoise: noise
  typeDiffuseNoise: babble
  fileDiffuseBabble: danse/tests/sigs/02_noise/ssn/ssn_long.wav
  #
  # VADenergyDecrease_dB: 35
  VADenergyDecrease_dB: 50
  VADwinLength: 0.04  # [s]
  vadMinProportionActive: 0.25 
  # enableVADloadFromFile: false
  rd: '[10, 10, 10]'
  sigDur: 15  # [s]
  selfnoiseSNR: 30  # [dB]
  # selfnoiseSNR: 999  # [dB]
  layoutType: random
  # layoutType: vert_spinning_top
  # layoutType: random_spinning_top
  # layoutType: predefined
  minDistToWalls: 0.5
  predefinedLayoutFile: danse/config_files/asc_layouts/asc2_20230613_174233.yaml
  spinTop_randomWiggleAmount: 0.1  # [m]
  spinTop_minInterNodeDist: 1  # [m]
  spinTop_minSourceSpacing: 0.5  # [m]
  t60: 0.5  # [s]
  # t60: 0.0  # [s]
  # SROperNode: '[0, 100, 200]'  # [PPM]
  # SROperNode: '[0, 5, 10]'  # [PPM]
  # SROperNode: '[10, 0, 5]'  # [PPM]
  SROperNode: '[0]'  # [PPM]
  # nSensorPerNode: '[1, 2, 3]'
  # nSensorPerNode: '[3, 3]'
  nSensorPerNode: '[1, 1, 1]'
  # nSensorPerNode: '[3, 3, 3]'
  # nSensorPerNode: '[1, 1]'
  # nSensorPerNode: '[2, 2]'
  # nSensorPerNode: '[2, 2, 2]'
  interSensorDist: 0.2
  #
  # baseSNR: 0
  baseSNR: 5
  # baseSNR: 20
  # baseSNR: 9999
  # signalType: random
  signalType: from_file
  randSignalsParams:
    distribution: uniform
    # pauseType: random  # type of added pauses
    pauseType: predefined  # type of added pauses
  desiredSignalFile:
  - C:\Users\pdidier\Dropbox\PC\Documents\sounds-phd\danse/tests/sigs/01_speech/speech2_16000Hz.wav
  nDesiredSources: 1
  nNodes: 3
  nNoiseSources: 3
  noiseSignalFile: loadfrom danse/tests/sigs/02_noise/ssn
  referenceSensor: 0
  vadFilesFolder: C:\Users\pdidier\Dropbox\PC\Documents\sounds-phd\danse\vad_files
  topologyParams:
    # topologyType: user-defined
    topologyType: fully-connected
    seed: 12347
    commDistance: 4.0
    plotTopo: false
    userDefinedTopo: '[[1, 1, 0], [1, 1, 1], [0, 1, 1]]'  # compact way to write lists
    # userDefinedTopo: '[[1, 1], [1, 1]]'  # compact way to write lists